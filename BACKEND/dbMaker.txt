CREATE DATABASE IF NOT EXISTS konyvtar CHARACTER SET utf8 COLLATE utf8_hungarian_ci;
USE konyvtar;
CREATE TABLE IF NOT EXISTS languages(
    lang_id INT AUTO_INCREMENT PRIMARY KEY,
    lang VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS publishers(
    publisher_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    phone VARCHAR(255),
    email VARCHAR(255),
    webpage VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS book(
    ISBN_id INT AUTO_INCREMENT PRIMARY KEY,
    ISBN VARCHAR(13),
    title VARCHAR(255),
    publisher_id INT,
    release_date DATE,
    lang_id INT,
    description TEXT,
    picture_base64 TEXT,
    FOREIGN KEY(lang_id) REFERENCES languages(lang_id),
    FOREIGN KEY(publisher_id) REFERENCES publishers(publisher_id)
);
CREATE TABLE IF NOT EXISTS genres(
    genre_id INT AUTO_INCREMENT PRIMARY KEY,
    genre VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS authors(
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    author VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS books_genres_conn(
    ISBN_id INT NOT NULL,
    genre_id INT NOT NULL,
    FOREIGN KEY(ISBN_id) REFERENCES book(ISBN_id),
    FOREIGN KEY(genre_id) REFERENCES genres(genre_id)
);
CREATE TABLE IF NOT EXISTS books_authors_conn(
    ISBN_id INT NOT NULL,
    author_id INT NOT NULL,
    FOREIGN KEY(ISBN_id) REFERENCES book(ISBN_id),
    FOREIGN KEY(author_id) REFERENCES authors(author_id)
);
CREATE TABLE IF NOT EXISTS inventory(
    ISBN_id INT NOT NULL,
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    available BOOLEAN,
    FOREIGN KEY(ISBN_id) REFERENCES book(ISBN_id)
);
CREATE TABLE IF NOT EXISTS users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    surname VARCHAR(255),
    first_name VARCHAR(255),
    username VARCHAR(10),
    birth_date DATE,
    membership_end_date DATE,
    email VARCHAR(255),
    phone_number VARCHAR(255),
    password VARBINARY(16),
    birth_place VARCHAR(255),
    address VARCHAR(255),
    mother_maiden_name VARCHAR(255),
    active BOOLEAN
);
CREATE TABLE IF NOT EXISTS reservation(
    reservation_id INT AUTO_INCREMENT PRIMARY KEY,
    ISBN_id INT NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY(ISBN_id) REFERENCES book(ISBN_id),
    FOREIGN KEY(user_id) REFERENCES users(user_id)
);
CREATE TABLE IF NOT EXISTS employees(
    empl_id INT AUTO_INCREMENT PRIMARY KEY,
    empl_name VARCHAR(255),
    password VARBINARY(16) 
);
CREATE TABLE IF NOT EXISTS borrowings(
    borrowing_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT NOT NULL,
    user_id INT NOT NULL,
    empl_e INT NOT NULL, 
    start_date DATE,
    end_date DATE,
    FOREIGN KEY(book_id) REFERENCES inventory(book_id),
    FOREIGN KEY(user_id) REFERENCES users(user_id),
    FOREIGN KEY(empl_e) REFERENCES employees(empl_id)
);
CREATE TABLE IF NOT EXISTS booking(
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT NOT NULL,
    user_id INT NOT NULL,
    end_date DATE,
    FOREIGN KEY(book_id) REFERENCES inventory(book_id),
    FOREIGN KEY(user_id) REFERENCES users(user_id) 
);
CREATE TABLE IF NOT EXISTS votes(
    vote_id INT AUTO_INCREMENT PRIMARY KEY,
    author VARCHAR(255),
    book_title VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS users_votes_conn(
    user_id INT NOT NULL,
    vote_id INT NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(user_id),
    FOREIGN KEY(vote_id) REFERENCES votes(vote_id) 
);
CREATE TABLE IF NOT EXISTS  system_settings (
    membership_fee INT,
    borrowing_time INT,
    lengthening_time INT,
    reservation_time INT,
    max_reservations INT,
    max_lengthenings INT,
    latency_fee INT
);
